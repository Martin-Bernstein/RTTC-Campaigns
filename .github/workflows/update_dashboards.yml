name: “Rebuild Dashboard”

# Run this workflow on a schedule (every 10 minutes):
on:
  schedule:
    - cron:  '*/10 * * * *'    # runs at minute 0,10,20,30,40,50 of every hour (UTC)
  # You can also allow manual “Run workflow” via the GitHub Actions UI:
  workflow_dispatch: {}

jobs:
  update_dashboard:
    runs-on: ubuntu-latest

    steps:
      # 1) Check out the current code
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # needed so that we can push back changes
          persist-credentials: true  
          # By default, GITHUB_TOKEN is used so that we can push changes
      
      # 2) Set up R environment
      - name: Set up R
        uses: r-lib/actions/setup-r@v2

      # 3) Install any system libraries if needed
      #    (for most pure‐R packages, you may not need any apt‐get)
      #    But if usmap needs 'libudunits2-dev' or 'libgeos', you can add here.
      - name: Install system dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y libudunits2-dev libproj-dev libgeos-dev

      # 4) Install the R packages that your script relies on.
      #    Adjust the version numbers as desired. This block uses install.R to be reproducible.
      #    Alternatively you can call `install.packages(...)` directly.
      - name: Install R package dependencies
        run: |
          R -e 'install.packages(
                  c("data.table","usmap","ggplot2","plotly","htmltools","rairtable","sf"), 
                  repos="https://cloud.r-project.org"
                )'

      # 5) Run your R script to regenerate the HTMLs
      - name: Run maps_all50.R
        run: |
          Rscript "R scripts/maps_all50.R"

      # 6) Commit and push any changes to the generated HTMLs
      - name: Commit and push updated HTML
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # Stage only the changes in the 'map htmls/' directory
          git add "map htmls/"
          # Check if there’s anything new to commit
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Auto‐update dashboard HTMLs via GitHub Actions"
            git push
          fi
